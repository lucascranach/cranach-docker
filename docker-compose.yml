version: '3.2'
services:
  reverse-proxy:
    container_name: reverse-proxy
    image: nginx
    environment:
      - NGINX_ENVSUBST_TEMPLATE_SUFFIX=.template
      - DOMAIN=${DOMAIN}
    ports:
      - 80:80
      - 443:443
    networks: ['cranach-network']
    volumes:
      - ./nginx-config/dev/templates/:/etc/nginx/templates/
      - ./nginx-config/:/nginx-config/
      - ./nginx-config/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
     - api
  elasticsearch:
    container_name: cranach-es
    image: docker.elastic.co/elasticsearch/elasticsearch:$ELASTIC_VERSION
    environment:
      - ELASTIC_PASSWORD=$ELASTIC_PASSWORD
      - xpack.security.enabled=$ELASTIC_SECURITY
      - discovery.type=single-node
    networks:
      - cranach-network
    volumes: 
      - ./elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - ${PATH_ES_DATA}:/usr/share/elasticsearch/data
  kibana:
    container_name: cranach-kibana
    image: docker.elastic.co/kibana/kibana:$ELASTIC_VERSION
    volumes:
      - ./kibana.yml:/usr/share/kibana/config/kibana.yml    
    environment:
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=$ELASTIC_PASSWORD
      - ELASTIC_URL=http://elasticsearch
    ports: ['5601:5601']
    networks:
      - cranach-network
    links: ['elasticsearch']
    depends_on: ['elasticsearch']
  api:
    build: ${PATH_API}
    command: nodemon app.js
    container_name: cranach-api
    environment: 
      - NODE_PORT=${NODE_PORT}
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=$ELASTIC_PASSWORD
      - ELASTICSEARCH_INDICES_PREFIX=$ELASTIC_INDICES_PREFIX
      - API_USERNAME=$API_USERNAME
      - API_PASSWORD=$API_PASSWORD
      - MONGO_DB_CONNECTION_STRING=${MONGO_DB_CONNECTION_STRING}
      - MONGO_DB_PASSWORD=${MONGO_DB_PASSWORD}
      - SESSION_EXPIRY=${SESSION_EXPIRY}
      - JWT_SECRET=${JWT_SECRET}
    image: cranach-api
    volumes:
      - ${PATH_API}/src:/usr/src/app
      - /usr/src/app/node_modules
      - ${PATH_API_FILTER_ASSETS}:/usr/src/app/server/assets/filters
    depends_on:
       - elasticsearch
    networks:
      - cranach-network
  # mongodb:
  #   container_name: cranach-mongo-db
  #   image: mongo
  #   environment:
  #     - MONGO_INITDB_ROOT_USERNAME=${MONGO_DB_USERNAME}
  #     - MONGO_INITDB_DATABASE=admin
  #     - MONGO_INITDB_ROOT_PASSWORD=${MONGO_DB_PASSWORD}
  #     - MONGO_DB_USERNAME=${MONGO_DB_USERNAME}
  #     - MONGO_DB_PASSWORD=${MONGO_DB_PASSWORD}
  #     - MONGO_DB_DATABASE=${MONGO_DB_DATABASE}
  #   ports:
  #     - '27017:27017'
  #   networks: ['cranach-network']
  #   volumes:
  #     - ${PATH_MONGO_DATA}/:/data/db
  #     - ./docker-entrypoint-initdb.d/mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh:ro
  # mongo-express:
  #   container_name: mongo-express
  #   image: mongo-express
  #   depends_on:
  #     - mongodb
  #   environment:
  #     - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_DB_USERNAME}
  #     - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_DB_PASSWORD}
  #     - ME_CONFIG_MONGODB_SERVER=cranach-mongo-db
  #     - ME_CONFIG_BASICAUTH_USERNAME=${ME_CONFIG_BASICAUTH_USERNAME}
  #     - ME_CONFIG_BASICAUTH_PASSWORD=${ME_CONFIG_BASICAUTH_PASSWORD}
  #   restart: unless-stopped
  #   ports:
  #     - '8081:8081'
  #   networks: ['cranach-network']
networks: 
  cranach-network:
    driver: bridge